package com.google.zxing.pdf417.encoder;

import com.samsung.android.knox.custom.CustomDeviceManager;
import com.samsung.android.knox.custom.IKnoxCustomManager;
import com.samsung.android.knox.license.KnoxEnterpriseLicenseManager;
import com.samsung.android.knox.net.vpn.VpnErrorValues;
import com.sec.ims.volte2.data.QuantumSecurityInfo;
import com.sec.ims.volte2.data.VolteConstants;

/* compiled from: qb/87000731 7862a37e62df4d72b2921859baacdc80ea0c935793521606c8e11db53cc87e4f */
/* loaded from: classes2.dex */
public final class PDF417ErrorCorrection {
    public static final int[][] EC_COEFFICIENTS = {new int[]{27, 917}, new int[]{522, 568, 723, 809}, new int[]{IKnoxCustomManager.Stub.TRANSACTION_setFavoriteApp, 308, 436, IKnoxCustomManager.Stub.TRANSACTION_registerSystemUiCallback, 646, 653, 428, 379}, new int[]{IKnoxCustomManager.Stub.TRANSACTION_setHardKeyIntentBroadcastInternal, 562, IKnoxCustomManager.Stub.TRANSACTION_addWidget, 755, 599, 524, 801, 132, IKnoxCustomManager.Stub.TRANSACTION_readFile, 116, CustomDeviceManager.MULTI_WINDOW_PERCENTAGE, 428, IKnoxCustomManager.Stub.TRANSACTION_readFile, 42, 176, 65}, new int[]{361, 575, 922, 525, 176, 586, 640, 321, 536, 742, 677, 742, 687, IKnoxCustomManager.Stub.TRANSACTION_registerSystemUiCallback, 193, 517, IKnoxCustomManager.Stub.TRANSACTION_setHardKeyIntentBroadcastExternal, 494, 263, 147, 593, 800, 571, 320, VpnErrorValues.ERROR_STORING_PROXY_PASSWORD, 133, IKnoxCustomManager.Stub.TRANSACTION_removeShortcut, 390, 685, 330, 63, 410}, new int[]{539, VolteConstants.ErrorCode.SESSION_INTERVAL_TOO_SMALL, 6, 93, 862, 771, 453, 106, 610, IKnoxCustomManager.Stub.TRANSACTION_stayInDexForegroundMode, 107, 505, 733, 877, VolteConstants.ErrorCode.ALTERNATIVE_SERVICES_EMERGENCY, 612, 723, 476, 462, 172, 430, 609, 858, 822, 543, 376, 511, 400, 672, 762, IKnoxCustomManager.Stub.TRANSACTION_getLoadingLogoPath, 184, 440, 35, 519, 31, 460, 594, IKnoxCustomManager.Stub.TRANSACTION_getUsbConnectionType, 535, 517, QuantumSecurityInfo.QUANTUM_KEY_STATUS.KEY_STATUS_EXCEPTION, 605, 158, 651, 201, VolteConstants.ErrorCode.NOT_ACCEPTABLE_HERE, 502, 648, 733, 717, 83, 404, 97, IKnoxCustomManager.Stub.TRANSACTION_getForceSingleView, 771, 840, 629, 4, VolteConstants.ErrorCode.ALTERNATIVE_SERVICES_EMERGENCY, 843, 623, 264, 543}, new int[]{521, 310, 864, 547, 858, VolteConstants.ErrorCode.PRECONDITION_FAILURE, IKnoxCustomManager.Stub.TRANSACTION_setApplicationRestrictionsInternal, 379, 53, 779, 897, 444, 400, 925, 749, VolteConstants.ErrorCode.UNSUPPORTED_MEDIA_TYPE, 822, 93, IKnoxCustomManager.Stub.TRANSACTION_getAutoCallNumberList, 208, 928, IKnoxCustomManager.Stub.TRANSACTION_getHardKeyIntentMode, 583, 620, IKnoxCustomManager.Stub.TRANSACTION_getHomeScreenMode, 148, 447, 631, IKnoxCustomManager.Stub.TRANSACTION_startTcpDump, 908, 490, KnoxEnterpriseLicenseManager.ERROR_LICENSE_QUANTITY_EXHAUSTED_ON_AUTO_RELEASE, 516, 258, 457, 907, 594, 723, 674, IKnoxCustomManager.Stub.TRANSACTION_startTcpDump, 272, 96, 684, 432, 686, VolteConstants.ErrorCode.NOT_ACCEPTABLE2, 860, 569, 193, IKnoxCustomManager.Stub.TRANSACTION_getAutoCallPickupState, 129, 186, IKnoxCustomManager.Stub.TRANSACTION_getAppsButtonState, IKnoxCustomManager.Stub.TRANSACTION_stayInDexForegroundMode, 192, 775, IKnoxCustomManager.Stub.TRANSACTION_startSmartView, 173, 40, 379, 712, 463, 646, 776, 171, 491, IKnoxCustomManager.Stub.TRANSACTION_getApplicationRestrictionsInternal, 763, 156, 732, 95, 270, 447, 90, 507, 48, IKnoxCustomManager.Stub.TRANSACTION_getForceAutoShutDownState, 821, 808, 898, 784, 663, 627, 378, VolteConstants.ErrorCode.ALTERNATIVE_SERVICES_EMERGENCY_CSFB, 262, VolteConstants.ErrorCode.ALTERNATIVE_SERVICES, 602, 754, 336, 89, 614, 87, 432, 670, 616, 157, 374, IKnoxCustomManager.Stub.TRANSACTION_getZeroPageState, 726, VolteConstants.ErrorCode.BUSY_EVERYWHERE, 269, 375, 898, 845, 454, 354, 130, 814, 587, VpnErrorValues.ERROR_INVALID_PROXY_CONFIGURATION, 34, IKnoxCustomManager.Stub.TRANSACTION_getWifiHotspotEnabledState, 330, 539, IKnoxCustomManager.Stub.TRANSACTION_getApplicationRestrictionsInternal, 827, 865, 37, 517, 834, 315, 550, 86, 801, 4, 108, 539}, new int[]{524, 894, 75, 766, 882, 857, 74, 204, 82, 586, 708, IKnoxCustomManager.Stub.TRANSACTION_addDexURLShortcutExtend, 905, 786, 138, 720, 858, 194, 311, 913, IKnoxCustomManager.Stub.TRANSACTION_getHardKeyIntentBroadcast, 190, 375, 850, 438, 733, 194, IKnoxCustomManager.Stub.TRANSACTION_getForceSingleView, 201, IKnoxCustomManager.Stub.TRANSACTION_getForceSingleView, 828, 757, 710, 814, 919, 89, 68, 569, 11, 204, 796, 605, 540, 913, 801, KnoxEnterpriseLicenseManager.ERROR_LICENSE_DEACTIVATED, 799, 137, 439, 418, 592, 668, QuantumSecurityInfo.QUANTUM_KEY_STATUS.KEY_STATUS_FAIL_TO_GET_KEY, 859, 370, 694, 325, IKnoxCustomManager.Stub.TRANSACTION_getFavoriteApp, IKnoxCustomManager.Stub.TRANSACTION_getAutoCallNumberAnswerMode, 257, IKnoxCustomManager.Stub.TRANSACTION_registerSystemUiCallback, 549, IKnoxCustomManager.Stub.TRANSACTION_getVibrationIntensity, 884, 315, 70, 329, 793, 490, IKnoxCustomManager.Stub.TRANSACTION_setHardKeyIntentBroadcastInternal, 877, 162, 749, 812, 684, 461, 334, 376, 849, 521, VpnErrorValues.ERROR_VPN_RECREATE_PROFILE_FAIL, IKnoxCustomManager.Stub.TRANSACTION_getBsohUnbiased, VpnErrorValues.ERROR_STORING_PROXY_PASSWORD, 712, 19, 358, 399, 908, 103, 511, 51, 8, 517, IKnoxCustomManager.Stub.TRANSACTION_getUsbConnectionType, IKnoxCustomManager.Stub.TRANSACTION_setAsoc, 470, 637, 731, 66, 255, 917, 269, 463, 830, 730, 433, 848, 585, 136, 538, 906, 90, 2, IKnoxCustomManager.Stub.TRANSACTION_getBsoh, 743, 199, 655, 903, 329, 49, 802, VolteConstants.ErrorCode.PRECONDITION_FAILURE, 355, 588, 188, 462, 10, 134, 628, 320, 479, 130, 739, 71, 263, 318, 374, 601, 192, 605, 142, 673, 687, IKnoxCustomManager.Stub.TRANSACTION_deleteHomeScreenPage, 722, 384, 177, 752, 607, 640, 455, 193, 689, 707, VpnErrorValues.ERROR_INVALID_IPV6_CONFIGURATION, 641, 48, 60, 732, 621, 895, 544, 261, 852, 655, 309, 697, 755, 756, 60, IKnoxCustomManager.Stub.TRANSACTION_removeShortcut, 773, 434, 421, 726, 528, 503, 118, 49, 795, 32, 144, 500, IKnoxCustomManager.Stub.TRANSACTION_removeFavoriteApp, 836, 394, IKnoxCustomManager.Stub.TRANSACTION_getForceSingleView, 566, 319, 9, 647, 550, 73, 914, 342, 126, 32, 681, CustomDeviceManager.SOURCE_ADDRESS, 792, 620, 60, 609, CustomDeviceManager.MULTI_WINDOW_FIXED_STATE, 180, 791, 893, 754, 605, 383, IKnoxCustomManager.Stub.TRANSACTION_getForceAutoShutDownState, 749, 760, IKnoxCustomManager.Stub.TRANSACTION_addAutoCallNumber, 54, IKnoxCustomManager.Stub.TRANSACTION_getApplicationRestrictionsInternal, 134, 54, 834, IKnoxCustomManager.Stub.TRANSACTION_migrateApplicationRestrictions, 922, 191, 910, 532, 609, 829, 189, 20, 167, 29, 872, 449, 83, 402, 41, 656, 505, 579, 481, 173, 404, IKnoxCustomManager.Stub.TRANSACTION_removeDexURLShortcut, 688, 95, 497, 555, 642, 543, VpnErrorValues.ERROR_VPN_RECREATE_PROFILE_FAIL, 159, 924, 558, 648, 55, 497, 10}, new int[]{QuantumSecurityInfo.QUANTUM_KEY_STATUS.KEY_STATUS_EXCEPTION, 77, 373, 504, 35, 599, 428, 207, 409, 574, 118, 498, IKnoxCustomManager.Stub.TRANSACTION_startProKioskMode, VolteConstants.ErrorCode.ALTERNATIVE_SERVICES, 350, 492, 197, 265, 920, 155, 914, IKnoxCustomManager.Stub.TRANSACTION_migrateApplicationRestrictions, IKnoxCustomManager.Stub.TRANSACTION_setBrightness, 643, IKnoxCustomManager.Stub.TRANSACTION_getTcpDump, 871, VpnErrorValues.ERROR_STOPPING_CONNECTION_BEFORE_REMOVING, 88, 87, 193, QuantumSecurityInfo.QUANTUM_KEY_STATUS.KEY_STATUS_EXCEPTION, 781, 846, 75, 327, 520, 435, 543, 203, 666, IKnoxCustomManager.Stub.TRANSACTION_addDexURLShortcut, 346, 781, 621, 640, 268, 794, 534, 539, 781, VolteConstants.ErrorCode.REQUEST_TIMEOUT, 390, 644, 102, 476, 499, IKnoxCustomManager.Stub.TRANSACTION_getBsoh, 632, 545, 37, 858, 916, 552, 41, 542, IKnoxCustomManager.Stub.TRANSACTION_setAsoc, 122, 272, 383, 800, 485, 98, 752, 472, 761, 107, 784, 860, 658, 741, IKnoxCustomManager.Stub.TRANSACTION_getBsoh, 204, 681, 407, 855, 85, 99, 62, 482, 180, 20, IKnoxCustomManager.Stub.TRANSACTION_getApplicationRestrictionsInternal, 451, 593, 913, 142, 808, 684, IKnoxCustomManager.Stub.TRANSACTION_stayInDexForegroundMode, 536, 561, 76, 653, 899, 729, 567, 744, 390, 513, 192, 516, 258, IKnoxCustomManager.Stub.TRANSACTION_getFavoriteApp, 518, 794, 395, 768, 848, 51, 610, 384, 168, 190, 826, 328, 596, 786, 303, 570, VolteConstants.ErrorCode.ALTERNATIVE_SERVICES_EMERGENCY, VolteConstants.ErrorCode.UNSUPPORTED_MEDIA_TYPE, 641, 156, IKnoxCustomManager.Stub.TRANSACTION_setFavoriteApp, 151, 429, 531, 207, 676, 710, 89, 168, 304, 402, 40, 708, 575, 162, 864, IKnoxCustomManager.Stub.TRANSACTION_setBrightness, 65, 861, 841, 512, 164, 477, 221, 92, 358, 785, IKnoxCustomManager.Stub.TRANSACTION_getAsoc, 357, 850, 836, 827, 736, 707, 94, 8, 494, 114, 521, 2, 499, 851, 543, 152, 729, 771, 95, IKnoxCustomManager.Stub.TRANSACTION_removeDexShortcut, 361, 578, 323, 856, 797, IKnoxCustomManager.Stub.TRANSACTION_setAsoc, 51, 684, 466, 533, 820, 669, 45, VpnErrorValues.ERROR_USB_TETHERING_FAILED, 452, 167, 342, IKnoxCustomManager.Stub.TRANSACTION_getHardKeyIntentMode, 173, 35, 463, 651, 51, 699, 591, 452, 578, 37, 124, IKnoxCustomManager.Stub.TRANSACTION_setKeyedAppStatesReport, CustomDeviceManager.DESTINATION_ADDRESS, 552, 43, 427, 119, 662, 777, 475, 850, 764, 364, 578, 911, IKnoxCustomManager.Stub.TRANSACTION_getLoadingLogoPath, 711, 472, VolteConstants.ErrorCode.BAD_EXTENSION, IKnoxCustomManager.Stub.TRANSACTION_setHomeScreenMode, IKnoxCustomManager.Stub.TRANSACTION_getAsoc, 594, 394, 511, 327, 589, 777, 699, 688, 43, VolteConstants.ErrorCode.REQUEST_TIMEOUT, 842, 383, 721, 521, 560, 644, 714, 559, 62, 145, 873, 663, 713, 159, 672, 729, 624, 59, 193, 417, 158, IKnoxCustomManager.Stub.TRANSACTION_getVibrationIntensity, 563, 564, 343, 693, 109, 608, 563, 365, 181, 772, 677, 310, IKnoxCustomManager.Stub.TRANSACTION_removeDexShortcut, QuantumSecurityInfo.QUANTUM_KEY_STATUS.KEY_STATUS_FAIL_TO_GET_KEY, 708, 410, 579, 870, 617, 841, 632, 860, IKnoxCustomManager.Stub.TRANSACTION_setAsoc, 536, 35, 777, 618, 586, 424, 833, 77, 597, 346, 269, 757, 632, 695, 751, CustomDeviceManager.SOURCE_ADDRESS, IKnoxCustomManager.Stub.TRANSACTION_addDexShortcut, 184, 45, 787, 680, 18, 66, 407, 369, 54, 492, IKnoxCustomManager.Stub.TRANSACTION_getForceAutoShutDownState, 613, 830, 922, 437, 519, 644, 905, 789, VolteConstants.ErrorCode.BAD_EXTENSION, 305, CustomDeviceManager.MULTI_WINDOW_FIXED_STATE, 207, 300, 892, 827, 141, 537, VolteConstants.ErrorCode.ALTERNATIVE_SERVICES_EMERGENCY, 662, 513, 56, IKnoxCustomManager.Stub.TRANSACTION_setDexForegroundModePackageList, 341, IKnoxCustomManager.Stub.TRANSACTION_getZeroPageState, 797, 838, 837, 720, IKnoxCustomManager.Stub.TRANSACTION_setUsbConnectionType, VpnErrorValues.ERROR_VPN_RECREATE_PROFILE_FAIL, 631, 61, 87, 560, 310, 756, 665, 397, 808, 851, 309, 473, 795, 378, 31, 647, 915, 459, 806, 590, 731, 425, IKnoxCustomManager.Stub.TRANSACTION_getAutoCallNumberAnswerMode, 548, IKnoxCustomManager.Stub.TRANSACTION_addDexURLShortcut, 321, 881, 699, 535, 673, 782, 210, 815, 905, 303, 843, 922, IKnoxCustomManager.Stub.TRANSACTION_setBootingAnimationSub, 73, 469, 791, 660, 162, 498, 308, 155, VolteConstants.ErrorCode.SESSION_INTERVAL_TOO_SMALL, 907, 817, 187, 62, 16, 425, 535, 336, IKnoxCustomManager.Stub.TRANSACTION_stopProKioskMode, 437, 375, IKnoxCustomManager.Stub.TRANSACTION_setHardKeyIntentBroadcastExternal, 610, IKnoxCustomManager.Stub.TRANSACTION_setApplicationRestrictionsInternal, 183, 923, 116, 667, 751, QuantumSecurityInfo.QUANTUM_KEY_STATUS.KEY_STATUS_FAIL_TO_GET_KEY, 62, 366, 691, 379, 687, 842, 37, 357, 720, 742, 330, 5, 39, 923, 311, 424, IKnoxCustomManager.Stub.TRANSACTION_getZeroPageState, 749, 321, 54, 669, 316, 342, IKnoxCustomManager.Stub.TRANSACTION_migrateApplicationRestrictions, 534, 105, 667, VolteConstants.ErrorCode.NOT_ACCEPTABLE_HERE, 640, 672, 576, 540, 316, VolteConstants.ErrorCode.BUSY_HERE, 721, 610, 46, 656, 447, 171, 616, 464, 190, 531, IKnoxCustomManager.Stub.TRANSACTION_getApplicationRestrictionsInternal, 321, 762, 752, 533, 175, 134, 14, VolteConstants.ErrorCode.ALTERNATIVE_SERVICES_EMERGENCY, 433, 717, 45, 111, 20, 596, IKnoxCustomManager.Stub.TRANSACTION_registerSystemUiCallback, 736, 138, 646, 411, 877, 669, 141, 919, 45, 780, 407, 164, CustomDeviceManager.DESTINATION_ADDRESS, 899, 165, 726, VolteConstants.ErrorCode.BUSY_EVERYWHERE, 325, 498, 655, 357, 752, 768, IKnoxCustomManager.Stub.TRANSACTION_getLockScreenShortcut, 849, 647, 63, 310, 863, IKnoxCustomManager.Stub.TRANSACTION_removeDexURLShortcut, 366, 304, IKnoxCustomManager.Stub.TRANSACTION_setShuttingDownAnimationSub, 738, 675, 410, 389, IKnoxCustomManager.Stub.TRANSACTION_getHardKeyIntentMode, 31, 121, 303, 263}};

    private PDF417ErrorCorrection() {
    }
}
